{"version":3,"sources":["utils/themes.ts","utils/common.ts","styled.d.ts","pages/ClockPage.tsx","App.tsx","index.tsx"],"names":["lightTheme","body","text","boxShadow","darkTheme","time","date","hour","String","getHours","min","getMinutes","sec","getSeconds","exactHour","exactMin","gsDayNames","GlobalStyles","createGlobalStyle","theme","ClockPage","Date","today","getDay","useState","setTheme","setThemestate","state","setstate","refreshTime","useEffect","setInterval","SecHand","styled","div","keyframes","secHandAnim","className","style","transform","type","checked","id","onClick","htmlFor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAaA,EAAa,CACxBC,KAAM,OACNC,KAAM,OACNC,UAAW,wEAGAC,EAAY,CACvBH,KAAM,UACNC,KAAM,OACNC,UAAW,yECEN,SAASE,EAAKC,GAMnB,MAAO,CAAEC,KALYC,OAAsC,IAA7BF,EAAKG,WAAa,GAAM,GAAU,KAKjDC,IAJKF,OAA2B,EAApBF,EAAKK,aAAmB,KAI/BC,IAHAJ,OAA2B,EAApBF,EAAKO,aAAmB,IAG1BC,UAFCR,EAAKG,WAEKM,SADXT,EAAKK,cAIzB,I,IAYMK,EAAsB,CACjC,SACA,SACA,UACA,YACA,WACA,SACA,YCnCWC,EAAeC,YAAH,iMAGE,qBAAGC,MAAkBlB,QAGvB,qBAAGkB,MAAkBhB,aAI5B,qBAAGgB,MAAkBjB,Q,OCRxB,SAASkB,IAGtB,IAAMd,EAAa,IAAIe,KAGjBC,EAAgBN,EAAWV,EAAKiB,UAGtC,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAA2BrB,EAAKC,GAAxBC,EAAR,EAAQA,KAAMG,EAAd,EAAcA,IAEd,GAFA,EAAmBE,IAEOY,mBAA6B,CACrDjB,KAAM,IACNG,IAAK,IACLE,IAAK,IACLE,UAAW,EACXC,SAAU,KALZ,mBAAOY,EAAP,KAAcC,EAAd,KASMC,EAAc,WAClB,IAAMvB,EAAa,IAAIe,KACvBO,EAASvB,EAAKC,KAIhBwB,qBAAU,WACRC,YAAYF,EAAa,OACxB,IAGH,IAAMG,EAAUC,IAAOC,IAAV,qEFpBY,SAACtB,GAC1B,OAAOuB,YAAP,uIAEwBvB,EAIAA,GEcTwB,CAAY5B,OAAM,OAACmB,QAAD,IAACA,OAAD,EAACA,EAAOf,OAGzC,OACE,eAAC,IAAD,CAAeO,MAAOM,EAAWzB,EAAaI,EAA9C,UACE,cAACa,EAAD,IACA,sBAAKoB,UAAU,QAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCf,IACnC,sBAAKe,UAAU,oBAAf,iBACGV,QADH,IACGA,OADH,EACGA,EAAOb,UACR,qCAFF,OAGGa,QAHH,IAGGA,OAHH,EAGGA,EAAOZ,eAGZ,sBAAKsB,UAAU,iBAAf,UACE,qBACEA,UAAU,+BACVC,MAAO,CACLC,UAAU,UAAD,OAAY7B,EAAZ,WAGb,cAACsB,EAAD,CAASK,UAAU,iCAEnB,qBACEA,UAAU,gCACVC,MAAO,CACLC,UAAU,UAAD,OAAYhC,EAAZ,cAKf,sBAAK8B,UAAU,sBAAf,UACE,uBACEG,KAAK,WACLC,QAAShB,EACTiB,GAAG,SACHC,QAAS,WACPjB,GAAeD,MAGnB,uBAAOmB,QAAQ,SAASP,UAAU,0B,MCxE7BQ,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAACjB,EAAD,OCCN0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7e16a634.chunk.js","sourcesContent":["export const lightTheme = {\r\n  body: \"#fff\",\r\n  text: \"#000\",\r\n  boxShadow: \"36px 14px 30px 9px #172f6a99,-44px -7px 40px 15px rgba(0, 0, 0, 0.1)\"\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#152552\",\r\n  text: \"#fff\",\r\n  boxShadow: \"36px 14px 30px 9px #172f6a99,-44px -7px 40px 15px rgba(0, 0, 0, 0.25)\"\r\n};\r\n","import {  keyframes } from \"styled-components\";\r\n\r\n\r\nexport type timeDetails = {\r\n  hour: String;\r\n  min: String;\r\n  sec: String;\r\n  exactHour: Number;\r\n  exactMin: Number;\r\n};\r\n\r\nexport function time(date: Date): timeDetails {\r\n  const hour: String = String(((date.getHours() % 12) - 1) * 30 + 300);\r\n  const min: String = String(date.getMinutes() * 6 + 270);\r\n  const sec: String = String(date.getSeconds() * 6 - 90);\r\n  const exactHour: Number = date.getHours();\r\n  const exactMin: Number = date.getMinutes();\r\n  return { hour, min, sec, exactHour, exactMin };\r\n}\r\n\r\nexport const secHandAnim = (sec: string) => {\r\n  return keyframes`\r\n    from {\r\n      transform: rotate(${sec}deg);\r\n    }\r\n\r\n    to {\r\n      transform: rotate(${sec}deg);\r\n    }\r\n  `;\r\n};\r\n\r\nexport const gsDayNames:String[] = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n];","import \"styled-components\";\r\n\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n    .clock{\r\n        background-color:${({ theme }) => theme.body};\r\n\r\n        &__circle {\r\n            box-shadow:${({ theme }) => theme.boxShadow};\r\n        }\r\n\r\n    &__digi{\r\n        color : ${({ theme }) => theme.text};\r\n    }\r\n    }\r\n\r\n\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { lightTheme, darkTheme } from \"../utils/themes\";\r\nimport { gsDayNames, secHandAnim, time, timeDetails } from \"../utils/common\";\r\nimport { GlobalStyles } from \"../styled.d\";\r\n\r\nexport default function ClockPage() {\r\n\r\n\r\n  const date: Date = new Date();\r\n\r\n  // get todays weekday\r\n  const today: String = gsDayNames[date.getDay()];\r\n\r\n  // for theme toggler\r\n  const [setTheme, setThemestate] = useState(false);\r\n\r\n  // get time at initail state\r\n  const { hour, min, sec } = time(date);\r\n\r\n  const [state, setstate] = useState<timeDetails | null>({\r\n    hour: \"0\",\r\n    min: \"0\",\r\n    sec: \"0\",\r\n    exactHour: 0,\r\n    exactMin: 0,\r\n  });\r\n\r\n  // get time for every 1 sec and update time variable\r\n  const refreshTime = () => {\r\n    const date: Date = new Date();\r\n    setstate(time(date));\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    setInterval(refreshTime, 1000);\r\n  }, []);\r\n\r\n  // animate second hand using styled component\r\n  const SecHand = styled.div`\r\n    animation: ${secHandAnim(String(state?.sec))} 1s linear infinite;\r\n  `;\r\n\r\n  return (\r\n    <ThemeProvider theme={setTheme ? lightTheme : darkTheme}>\r\n      <GlobalStyles />\r\n      <div className=\"clock\">\r\n        <div className=\"clock__digi\">\r\n          <div className=\"clock__digi--day\">{today}</div>\r\n          <div className=\"clock__digi--time\">\r\n            {state?.exactHour}\r\n            <span>:</span>\r\n            {state?.exactMin}\r\n          </div>\r\n        </div>\r\n        <div className=\"clock__circle \">\r\n          <div\r\n            className=\"clock__hand clock__hand--min\"\r\n            style={{\r\n              transform: `rotate(${min}deg)`,\r\n            }}\r\n          ></div>\r\n          <SecHand className=\"clock__hand clock__hand--sec\" />\r\n\r\n          <div\r\n            className=\"clock__hand clock__hand--hour\"\r\n            style={{\r\n              transform: `rotate(${hour}deg)`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        <div className=\"clock__theme-switch\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={setTheme}\r\n            id=\"switch\"\r\n            onClick={() => {\r\n              setThemestate(!setTheme);\r\n            }}\r\n          ></input>\r\n          <label htmlFor=\"switch\" className=\"switch-label\"></label>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import ClockPage from \"./pages/ClockPage\"\nimport \"./styles/main.scss\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ClockPage/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}